---
import { slugify } from "@util/helpers";
import { Icon } from "astro-icon/components";
import Button from "@components/navigation/Button.astro";
import { marked } from "marked";

const { title, cards, style, cards_by_row, content } = Astro.props;
const id = title ? slugify(title) : "multi-cards";
const cardsByRow = cards_by_row ?? 3;
const lessCardsByRow = cardsByRow - 1;
---

<div
  {id}
  class={`container-${style.container} fade-up rounded-md features grid gap-8 scroll-m-8`}
>
  {title && <h1 class="title-sm fade-up"> {title}</h1>}

  {content && <div set:html={marked.parse(content)} class="richtext fade-up" />}

  {
    cards && cards.length > 0 && (
      <div class="card__gap-container md:flex md:flex-wrap md:gap-8">
        {cards.map((card) => (
          <div class="card-container card__size-card mb-8 flex overflow-hidden rounded shadow-2xl @container md:mb-0">
            <div class="card-grid grid w-full">
              <div class={`relative h-fit ${card.surface}`}>
                <div class="px-8 pb-14 pt-8">
                  <div class="pb-4">
                    <span class="title-xs font-medium tracking-tight">
                      {card.title}
                    </span>
                  </div>
                </div>

                <div class="r-0 absolute -bottom-px flex w-full shrink-0 @md:scale-110">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    xml:space="preserve"
                    preserveAspectRatio="none"
                    class="w-full"
                    style="enable-background:new 0 0 1200 125.17"
                    viewBox="0 0 1200 125.17"
                  >
                    <path
                      d="M878.61 53.73c-58 10.79-114.16 30.13-172 41.86-82.39 16.72-168.19 17.73-250.45.39-79.94-16.81-162.83-57.81-241.82-78.64C144.29-1.14 67.81-8.75 0 14.34v110.83h1200V82.82a600.1 600.1 0 0 0-321.39-29.09z"
                      class="shape-fill"
                    />
                  </svg>
                </div>
              </div>

              {card.content && (
                <div set:html={marked.parse(card.content)} class="p-8" />
              )}

              <div class="bottom-0 right-0 flex w-full justify-end p-8 @md:absolute @md:pr-8">
                <div class="mt-auto">
                  {card?.buttons &&
                    card.buttons.map((btn) => <Button {...btn} />)}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    )
  }
</div>

<style define:vars={{ cardsByRow, lessCardsByRow }}>
  .card-grid {
    grid-template-rows: min-content auto min-content;
  }

  .card-container {
    @apply bg-white text-dark;
    .shape-fill {
      @apply fill-white;
    }
  }
  .features {
    &__item {
      min-width: min(100vw - var(--spacing), 16rem);
      @screen sm {
        max-width: 22rem;
      }
    }
  }

  @media (min-width: 768px) {
    .card__size-card {
      --marginBetweenCards: calc(8 * 5px);
      width: calc((100% - var(--marginBetweenCards)) / 2);
    }
  }
  @media (min-width: 1024px) {
    .card__size-card {
      --marginBetweenCards: calc(var(--lessCardsByRow) * 8 * 5px);
      width: calc((100% - var(--marginBetweenCards)) / var(--cardsByRow));
    }
  }
</style>
