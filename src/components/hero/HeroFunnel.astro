---
import Picture from "@components/media/Picture.astro";
import { marked } from "marked";
import { Icon } from "astro-icon/components";
import ColoredText from "@components/ColoredText.astro";

const { title, hero } = Astro.props;
const { slug } = Astro.params;
const hasImage = !!hero?.media?.thumbnail?.trim() || false;
const hasBgImage = !!hero?.media?.background_image?.trim() || false;
const mediaClass = () => {
  if (!hero?.media?.aspect) return "";
  if (hero.media.aspect == 1) return "aspect-1";
  if (hero.media.aspect == 1.777) return "aspect-video";
  if (hero.media.aspect == 1.25) return "aspect-5/4";
  if (hero.media.aspect == 0.8) return "aspect-4/5";
  if (hero.media.aspect == 0.5625) return "aspect-9/16";
  return "";
};
---

{
  hero && (
    <div
      class={`hero-funnel parallax-wrap relative ${
        hero?.style?.surface || "surface-dark"
      } ${hero?.style?.class || ""} ${hero?.style?.layout || ""} ${
        hero?.style?.media || ""
      }`}
      transition:name={`hero_${slug || Math.random()}`}
      id="header"
    >
      <div
        class={`parallax pointer-events-none absolute inset-0 bg-${
          hero?.style?.background || ""
        }`}
      />
      {hero?.style?.pattern && (
        <div
          class="parallax absolute inset-0"
          style={`${hero?.style?.pattern || ""}  `}
        />
      )}
      {hasBgImage && (
        <div class="media parallax absolute inset-0">
          <Picture
            attributes={{
              picture: {
                class: "sm:h-screen ",
                style: `opacity: ${hero?.media?.image_opacity || 0.7}`,
              },
            }}
            src={hero.media.background_image}
            width={1920}
            height={1080}
            aspect={16 / 10}
            alt={title}
            sizes="100vw"
            loading="eager"
            layout="fill"
            artDirectives={[
              {
                media: "(max-width: 500px)",
                aspect: 0.6,
                src: hero.media.background_image,
                breakpoints: [320, 360, 390, 412, 500, 601, 768, 1024, 1200],
              },
              {
                media: "(max-width: 1000px)",
                aspect: 1,
                src: hero.media.background_image,
                breakpoints: [500, 601, 768, 820, 962, 1280, 1440, 1536, 1920],
              },
            ]}
          />
        </div>
      )}

      <div class="relative z-10 grid w-full place-items-center">
        <div
          class={`container-${hero?.style?.container || "xl"} py-14 ${
            hero?.style?.layout === "row"
              ? "hero-funnel__row-grid"
              : "hero-funnel__col-grid"
          }`}
        >
          <div class="mx-auto grid max-w-3xl gap-8 pt-20 md:pb-10">
            {hero?.title && (
              <div class="title" set:html={marked.parse(hero.title)} />
            )}
            {hero.intro && (
              <div
                class="balance text-lg"
                set:html={marked.parse(hero.intro)}
              />
            )}
            <slot />
          </div>

          <div class="hero-picture grid h-full w-full place-items-center">
            {hasImage && (
              <Picture
                src={hero.media.thumbnail}
                alt={hero.title}
                sizes="(min-width: 1450px) 580px, (min-width: 768px) calc(50vw - 4rem),  calc(100vw - 4rem)"
                aspect={hero.media?.aspect ? hero.media?.aspect : 1}
                layout="fullWidth"
                loading="eager"
                attributes={{
                  picture: {
                    style: `opacity: ${hero?.media?.thumbnail_opacity || 1}`,
                  },
                }}
              />
            )}
          </div>
        </div>
      </div>
      <div class={`hero-funnel__divider z-0 -mb-px`}>
        <span class="surface-base -mb-px h-40 w-full shrink-0 md:-mb-20 md:h-40 md:h-72" />
        <div class="surface-base h-full w-full" />
      </div>
    </div>
  )
}
<svg
  xmlns="http://www.w3.org/2000/svg"
  width="0"
  height="0"
  viewBox="0 0 1200 220.2"
>
  <defs>
    <clipPath
      id="heroclip"
      clipPathUnits="objectBoundingBox"
      transform="scale(0.0008333, 0.0045413)"
    >
      <path
        d="M0 82.8v137.4h1200V14.3c-67.8-23.1-144.3-15.5-214.3 3-79 20.8-161.9 61.8-241.8 78.6-82.3 17.3-168.1 16.3-250.5-.4-57.8-11.7-114-31.1-172-41.9C213.6 33.9 102.5 44 0 82.8z"
      ></path>
    </clipPath>
  </defs>
</svg>

<style lang="postcss" is:global>
  
  .title {
    strong, bold {
      @apply text-secondary font-bold;
    }
  }

  .bg-gradient { 
    will-change: transform;
    backface-visibility: hidden; 
    background-image: 
    
    radial-gradient(50vMax at -10vw -20vw, theme(colors.matouPrimaryLight02) 0%, theme(colors.matouPrimaryLight02 / 80%)  40%, theme(colors.matouPrimaryLight02 / 0%)  100%),
    radial-gradient(60vMax at 100vw 100vh, theme(colors.matouPrimaryLight02) 0%, theme(colors.matouPrimaryLight02 / 80%)  40%, theme(colors.matouPrimaryLight02 / 0%)  100%);
    
     &:after {
    content: "";
    @apply sticky w-full h-full block inset-0 z-20 overflow-hidden opacity-20 pointer-events-none;
    mix-blend-mode: overlay; 
    filter: url(#noiseFilter);
  } 
  }

  .hero-funnel {
    min-height: max(60vh, 30rem);
    @apply z-20 overflow-hidden grid place-items-center;

    &__media {
      max-height: max(20rem, 70vh);
      
    }

    &__col-grid {
      @apply grid grid-cols-1 gap-10 place-items-center text-center md:text-left;

      @screen md {
        grid-template-columns: 5fr 4fr;
      }

      .hero-funnel__buttons {
        @apply md:justify-start;
      } 
    }

     &__row-grid {
      @apply grid grid-cols-1 text-center gap-10 ;
    }
    &__divider {
      @apply absolute bottom-0 left-0 right-0 overflow-hidden flex flex-col;
        
        min-height: 5rem;
        min-width: 1200px;
        
        
        & > span {
          @apply block;
           clip-path: url(#heroclip);
        }

    }

  &.row {
    .hero-funnel__divider {
      height: calc(100% - 80vh);
    }
  }

  .hero-picture img { 
    border-radius: 50%;
  }
    
  }
</style>
